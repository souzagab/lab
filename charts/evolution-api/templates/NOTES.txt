Thank you for installing {{ .Chart.Name }} (version: {{ .Chart.Version }})!

Application has been deployed with:
  - PostgreSQL database
  - Redis cache
  - Persistent storage for instances

Your Evolution API should be available soon at:

{{- if .Values.evolutionApi.ingress.enabled }}
{{- range $host := .Values.evolutionApi.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.evolutionApi.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.evolutionApi.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "evolution-api.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.evolutionApi.service.type }}
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "evolution-api.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "evolution-api.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.evolutionApi.service.port }}
{{- else if contains "ClusterIP" .Values.evolutionApi.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "evolution-api.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:{{ .Values.evolutionApi.service.port }}
{{- end }}

API Key for Authentication: This chart has created a Kubernetes Secret containing your API key.

To retrieve your API key:
  kubectl get secret --namespace {{ .Release.Namespace }} {{ .Values.evolutionApi.existingApiKeySecret | default (printf "%s-apikey" (include "evolution-api.fullname" .)) }} -o jsonpath="{.data.{{ .Values.evolutionApi.apiKeySecretKey }}}" | base64 --decode

You can test your deployment with:
  curl -X GET http://<your-service-ip>:{{ .Values.evolutionApi.service.port }}/api/version -H "apikey: <your-api-key>" 