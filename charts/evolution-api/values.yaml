# Default values for evolution-api.

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Security contexts
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Pull secrets for private registries
imagePullSecrets: []

evolutionApi:
  image:
    repository: atendai/evolution-api
    tag: v2.2.3
    pullPolicy: IfNotPresent

  replicaCount: 1

  # Define environment variables
  env:
    # Server config
    SERVER_TYPE: http
    SERVER_PORT: "8080"
    # SERVER_URL: http://localhost:8080 # This should be set based on ingress/service type

    # Cors - * for all or set separate by commas
    CORS_ORIGIN: "*"
    CORS_METHODS: GET,POST,PUT,DELETE
    CORS_CREDENTIALS: "true"

    # Determine the logs to be displayed
    LOG_LEVEL: ERROR,WARN,INFO # Reduced default logging
    LOG_COLOR: "true"
    LOG_BAILEYS: error

    # Set the maximum number of listeners for events
    EVENT_EMITTER_MAX_LISTENERS: "50"

    # Keep instance running even with no connection
    DEL_INSTANCE: "false"

    # Database settings
    DATABASE_PROVIDER: postgresql
    # DATABASE_CONNECTION_URI will be constructed using secrets and helpers
    DATABASE_CONNECTION_CLIENT_NAME: pg-evolution
    DATABASE_SSL: "false"

    # Choose the data you want to save
    DATABASE_SAVE_DATA_INSTANCE: "true"
    DATABASE_SAVE_DATA_NEW_MESSAGE: "true"
    DATABASE_SAVE_MESSAGE_UPDATE: "true"
    DATABASE_SAVE_DATA_CONTACTS: "true"
    DATABASE_SAVE_DATA_CHATS: "true"
    DATABASE_SAVE_DATA_LABELS: "true"
    DATABASE_SAVE_DATA_HISTORIC: "true"
    DATABASE_SAVE_IS_ON_WHATSAPP: "true"
    DATABASE_SAVE_IS_ON_WHATSAPP_DAYS: "7"
    DATABASE_DELETE_MESSAGE: "true"

    # Redis - Connection URI will be constructed using secrets/helpers
    REDIS_ENABLED: "true" # Needs to be true if redis subchart is enabled
    # REDIS_URI will be constructed
    REDIS_PREFIX: evolution
    CACHE_REDIS_ENABLED: "true"
    # CACHE_REDIS_URI will be constructed (uses different DB index /6)
    CACHE_REDIS_TTL: "604800"
    CACHE_REDIS_PREFIX_KEY: evolution
    CACHE_REDIS_SAVE_INSTANCES: "false"

    # Local Cache
    CACHE_LOCAL_ENABLED: "false"

    # Webhook settings (Keep disabled by default)
    WEBHOOK_GLOBAL_URL: ""
    WEBHOOK_GLOBAL_ENABLED: "false"
    WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS: "false"
    # ... (Keep webhook events flags as they are or make them configurable)

    # Phone client settings
    CONFIG_SESSION_PHONE_CLIENT: Evolution API
    CONFIG_SESSION_PHONE_NAME: Chrome
    CONFIG_SESSION_PHONE_VERSION: 2.3000.1015901307

    # QR Code settings
    QRCODE_LIMIT: "30"
    QRCODE_COLOR: "#175197"

    # Authentication - API Key will come from secret
    # AUTHENTICATION_API_KEY: secret

    # Language
    LANGUAGE: en

  envFromSecrets: []
  # Example:
  # - secretName: my-custom-secrets

  # API Key - Use a Kubernetes secret for this
  apiKeySecretName: evolution-api-apikey # Just use a plain string since templates aren't processed in values.yaml
  apiKeySecretKey: "api-key"
  existingApiKeySecret: "" # Set this to use an existing secret

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Persistence for /evolution/instances
  persistence:
    enabled: true
    storageClass: "" # Optional: Specify StorageClass or leave empty for default
    accessModes:
      - ReadWriteOnce
    size: 5Gi
    # existingClaim: "" # Optional: Use an existing PVC

  nodeSelector: {}

tolerations: []

affinity: {}

# PostgreSQL Dependency Configuration
postgresql:
  enabled: true
  nameOverride: "evolution-api" # Prefix postgres resources

  # Use an existing secret for postgresql password (recommended)
  # auth:
  #   existingSecret: "my-postgres-secret" # Secret must contain keys postgresql-password
  #   secretKeys:
  #     adminPasswordKey: postgresql-password

  # Or define auth details here (less secure)
  auth:
    database: evolution
    username: evolution
    password: "secret" # Default password, MUST be overridden in production
    # postgresPassword: "postgres_root_password" # Default postgres root password

  primary:
    persistence:
      enabled: true
      size: 8Gi
      # storageClass: ""
      # existingClaim: ""

# Redis Dependency Configuration
redis:
  enabled: true
  nameOverride: "evolution-api" # Prefix redis resources

  # Use an existing secret for redis password (recommended)
  # auth:
  #   existingSecret: "my-redis-secret" # Secret must contain keys redis-password
  #   passwordKey: redis-password

  # Or define auth details here (less secure)
  auth:
    enabled: false # Evolution API doesn't seem to use Redis auth by default
    # password: "secret" # Set if needed

  master:
    persistence:
      enabled: true # Persist redis data
      size: 4Gi
      # storageClass: ""
      # existingClaim: ""
  replica:
    replicaCount: 0 # No replicas needed for simple setup